/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_dashboard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/dashboard.js */ \"./resources/js/scripts/dashboard.js\");\n/* harmony import */ var _scripts_adminka_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/adminka.js */ \"./resources/js/scripts/adminka.js\");\n/* harmony import */ var _scripts_cart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/cart.js */ \"./resources/js/scripts/cart.js\");\n/* harmony import */ var _scripts_checkout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/checkout.js */ \"./resources/js/scripts/checkout.js\");\n/* harmony import */ var _scripts_header_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/header.js */ \"./resources/js/scripts/header.js\");\n/* harmony import */ var _scripts_product_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/product.js */ \"./resources/js/scripts/product.js\");\n/* harmony import */ var _scripts_productEdit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/productEdit.js */ \"./resources/js/scripts/productEdit.js\");\n\nwindow.appendCategoryButton=_scripts_dashboard_js__WEBPACK_IMPORTED_MODULE_0__.appendCategoryButton\nwindow.categoryAppend=_scripts_dashboard_js__WEBPACK_IMPORTED_MODULE_0__.categoryAppend\nwindow.generateCartButtons=_scripts_dashboard_js__WEBPACK_IMPORTED_MODULE_0__.generateCartButtons\nwindow.createAjaxProductsButton= _scripts_dashboard_js__WEBPACK_IMPORTED_MODULE_0__.createAjaxProductsButton\n\n;\nwindow.adminkaEventManager = _scripts_adminka_js__WEBPACK_IMPORTED_MODULE_1__.adminkaEventManager\n\n;\nwindow.ProductEventManager = _scripts_cart_js__WEBPACK_IMPORTED_MODULE_2__.ProductEventManager\n\n;\nwindow.OrderEventManager = _scripts_checkout_js__WEBPACK_IMPORTED_MODULE_3__.OrderEventManager\n\n;\nwindow.adminHeaderButtonEventManager = _scripts_header_js__WEBPACK_IMPORTED_MODULE_4__.adminHeaderButtonEventManager\nwindow.headerButtonEventManager = _scripts_header_js__WEBPACK_IMPORTED_MODULE_4__.headerButtonEventManager\n\n;\nwindow.productEventManager = _scripts_product_js__WEBPACK_IMPORTED_MODULE_5__.productEventManager\nwindow.replaceUnderScore = _scripts_product_js__WEBPACK_IMPORTED_MODULE_5__.replaceUnderScore\n\n;\nwindow.productEditEventManager = _scripts_productEdit_js__WEBPACK_IMPORTED_MODULE_6__.productEditEventManager\n\n\n//# sourceURL=webpack:///./resources/js/app.js?");

/***/ }),

/***/ "./resources/js/scripts/adminka.js":
/*!*****************************************!*\
  !*** ./resources/js/scripts/adminka.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminkaEventManager: () => (/* binding */ adminkaEventManager)\n/* harmony export */ });\nfunction adminkaEventManager(orders,translations){\n    let input = document.getElementById('order')\n    input.addEventListener('input',function (){\n        let text = this.value\n        let list = document.querySelector('.searchOrders')\n        list.textContent=''\n        if (text !==''){\n            for (let order of orders) {\n                if ((order.id.toString().startsWith(text))){\n                    let div = document.createElement('a')\n                    div.setAttribute('href',order.href)\n                    div.className = 'order'\n                    let firstP = document.createElement('p')\n                    firstP.textContent=order.id\n                    let secondP = document.createElement('p')\n                    secondP.textContent=order.price\n                    let thirdP = document.createElement('p')\n                    thirdP.textContent=translations.payed[order.payed]\n                    let fourthP = document.createElement('p')\n                    fourthP.textContent=translations.orderStatus[order.status]\n                    div.appendChild(firstP)\n                    div.appendChild(secondP)\n                    div.appendChild(thirdP)\n                    div.appendChild(fourthP)\n                    list.appendChild(div)\n                }\n            }\n           }\n       })\n   }\n\n\n//# sourceURL=webpack:///./resources/js/scripts/adminka.js?");

/***/ }),

/***/ "./resources/js/scripts/cart.js":
/*!**************************************!*\
  !*** ./resources/js/scripts/cart.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductEventManager: () => (/* binding */ ProductEventManager)\n/* harmony export */ });\nfunction ProductEventManager(product,translations) {\n    let deleteButton = document.getElementById('delete_' + product.id)\n    // let cartButton = document.getElementById('cart')\n    // cartButton.textContent=translations.cart+':'+(Number(getNumbersFromString(cartButton.textContent)[0])+1).toString()\n    let positiveButton = document.getElementById('plus_'+product.id)\n    let negativeButton = document.getElementById('minus_'+product.id)\n    let input = document.getElementById(product.id)\n    input.value = 0\n    window.addEventListener('load',function (){\n        deleteButton.addEventListener('click', deleteProductHandler(product))\n        positiveButton.addEventListener('click',addProductQuantity(product))\n        negativeButton.addEventListener('click',removeProductQuantity(product))\n        positiveButton.click()\n    })\n    function deleteProductHandler(product) {\n        return function (event) {\n            let cart = parseCookieValue(getCookie('cart'))\n            calcNewTotalPrice(product)\n            let cartAmount = removeProductIdFromCart(cart,product.id)\n            updateCartButton(cartAmount)\n            deleteProductDiv(product)\n            let totalPriceDiv = document.getElementById('total')\n            let totalPrice = Number(getNumbersFromString(totalPriceDiv.textContent)[0])\n            totalPriceDiv.textContent=translations.total+':'+(totalPrice-(product.price*Number(input.value))).toString()+\" ₽\"\n            if (cartAmount===0){\n                document.querySelector('.order').remove()\n            }\n        }\n    }\n    function addProductQuantity(product){\n        return function (event){\n            let totalPriceDiv = document.getElementById('total')\n            let totalPrice = Number(getNumbersFromString(totalPriceDiv.textContent)[0])\n            let input = document.getElementById(product.id)\n            let productTotalPriceDiv = document.getElementById('totalProductPrice_'+product.id)\n            let productTotalQuantityDiv = document.getElementById('totalQuantity_'+product.id)\n            let productTotalPrice= Number(getNumbersFromString(productTotalPriceDiv.textContent)[0])\n            let productTotalQuantity = productTotalQuantityDiv.textContent\n            if(productTotalQuantity<product.quantity){\n                input.value=(Number(input.value)+1).toString()\n                productTotalPriceDiv.textContent=(Number(productTotalPrice)+Number(product.price)).toString()+\" ₽\"\n                productTotalQuantityDiv.textContent=(Number(productTotalQuantityDiv.textContent)+1).toString()\n                totalPriceDiv.textContent=translations.total+':'+(totalPrice+Number(product.price)).toString()+\" ₽\"\n            }\n        }\n    }\n    function removeProductQuantity(product){\n        return function (event){\n            let totalPriceDiv = document.getElementById('total')\n            let totalPrice = Number(getNumbersFromString(totalPriceDiv.textContent)[0])\n            let input = document.getElementById(product.id)\n            let productTotalPriceDiv = document.getElementById('totalProductPrice_'+product.id)\n            let productTotalQuantityDiv = document.getElementById('totalQuantity_'+product.id)\n            let productTotalPrice= Number(getNumbersFromString(totalPriceDiv.textContent)[0])\n            let productTotalQuantity = productTotalQuantityDiv.textContent\n            if(productTotalQuantity>1){\n                input.value-=1\n                productTotalPriceDiv.textContent=(Number(productTotalPrice)-Number(product.price)).toString()+\" ₽\"\n                productTotalQuantityDiv.textContent=(Number(productTotalQuantityDiv.textContent)-1).toString()\n                totalPriceDiv.textContent=translations.total+':'+(totalPrice-Number(product.price)).toString()+\" ₽\"\n            }\n        }\n    }\n    function getNumbersFromString(string) {\n        return string.match(/\\d+/g)\n    }\n    function calcNewTotalPrice(product) {\n        let input = document.getElementById(product.id)\n        let quantity = input.value\n        let totalPrice = getNumbersFromString(document.getElementById('total').textContent)\n        let newValue = (Number(totalPrice) - (Number(product.price) * Number(quantity))).toString()\n        if (newValue<0){\n            newValue = 0\n        }\n        totalPrice.textContent = newValue+\" ₽\"\n    }\n    function deleteProductDiv(product) {\n        let div = document.getElementById('product_' + product.id)\n        div.remove()\n    }\n    function getCookie(cookieName) {\n        let cookies = document.cookie.split('; ');\n        // Проходим по всем кукам\n        for (let i = 0; i < cookies.length; i++) {\n            // Разделяем каждую куку по знаку равно, чтобы получить ключ и значение\n            let cookie = cookies[i].split('=');\n            // Если имя куки совпадает с искомым именем, возвращаем её значение\n            if (cookie[0] === cookieName) {\n                return cookie[1];\n            }\n        }\n        // Если кука с заданным именем не найдена, возвращаем null\n        return null;\n    }\n    function createCartCookie(value) {\n        let expirationDate = new Date();\n        if (typeof value === 'undefined' || value === null) {\n            value = {\n                products: [],\n                last_access: expirationDate.toUTCString()\n            };\n        }\n        let jsonValue = JSON.stringify(value);\n        expirationDate.setTime(expirationDate.getTime() + (60 * 1000 * 5));\n        document.cookie = 'cart=' + jsonValue + '; expires=' + expirationDate.toUTCString() + '; path=/; SameSite=Lax';\n        return jsonValue\n    }\n    function parseCookieValue(cookieValue) {\n        return JSON.parse(cookieValue)\n    }\n    function removeProductIdFromCart(cart, id) {\n        let time = new Date().toUTCString()\n        cart.products = cart.products.filter(function (value) {\n            return Number(value) !== Number(id)\n        })\n        cart.last_access = time\n        createCartCookie(cart);\n        return cart.products.length\n    }\n    function countProductsInCart(cart) {\n        return cart.products.length\n    }\n    function updateCartButton(value) {\n        let button = document.getElementById('cart')\n        button.textContent = translations.cart+ \":\" + value\n    }\n    function getProductsAmount(cart) {\n        return cart.products.length\n    }\n    function extractNonDigits(str) {\n        return str.replace(/\\d/g, '');\n    }\n}\n\n\n\n//# sourceURL=webpack:///./resources/js/scripts/cart.js?");

/***/ }),

/***/ "./resources/js/scripts/checkout.js":
/*!******************************************!*\
  !*** ./resources/js/scripts/checkout.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderEventManager: () => (/* binding */ OrderEventManager)\n/* harmony export */ });\nfunction OrderEventManager(deliveries,translations) {\n        let inputs = document.querySelectorAll('input[type=\"radio\"]')\n        inputs.forEach(function (input){\n            input.addEventListener('click',radioInputEvent(deliveries))\n        })\n        function radioInputEvent(deliveries){\n            return function (event){\n                let deliveryPriceDiv = document.querySelector('.deliveryPrice')\n                let deliveryPrice = 0\n                for (let delivery of deliveries) {\n                    if (Number(delivery.id) === Number(this.value)){\n                        deliveryPrice=delivery.price\n                    }\n                }\n                let text = extractNonDigitsAndSymbol(deliveryPriceDiv.textContent)\n                deliveryPriceDiv.textContent=text + deliveryPrice+' ₽'\n                totalPriceUpdate(deliveryPrice)\n            }\n        }\n        function totalPriceUpdate(deliveryPrice){\n            let productsPriceDiv = document.querySelector('.productsPrice')\n            let productsPrice = getNumbersFromString(productsPriceDiv.textContent)[0]\n            let totalPriceDiv = document.querySelector('.totalPrice')\n            let text = extractNonDigitsAndSymbol(totalPriceDiv.textContent)\n            totalPriceDiv.textContent=text + (Number(productsPrice)+Number(deliveryPrice))+' ₽'\n        }\n        function getNumbersFromString(string) {\n            return string.match(/\\d+/g)\n        }\n        function extractNonDigitsAndSymbol(str) {\n            console.log(str)\n            return str.replace(/[\\d₽]/g, '');\n        }\n}\n\n\n\n//# sourceURL=webpack:///./resources/js/scripts/checkout.js?");

/***/ }),

/***/ "./resources/js/scripts/dashboard.js":
/*!*******************************************!*\
  !*** ./resources/js/scripts/dashboard.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendCategoryButton: () => (/* binding */ appendCategoryButton),\n/* harmony export */   categoryAppend: () => (/* binding */ categoryAppend),\n/* harmony export */   createAjaxProductsButton: () => (/* binding */ createAjaxProductsButton),\n/* harmony export */   generateCartButtons: () => (/* binding */ generateCartButtons)\n/* harmony export */ });\nfunction categoryAppend(categories,subcategories,productParams){\n    let categoryButton = document.getElementById('category')\n    let head = document.querySelector('.filterHead')\n    categoryButton.addEventListener('click',function (){\n        if (head.innerHTML===''){\n            for (let i = 0;i<categories.length;i++){\n                let div = document.createElement('div')\n                div.id = \"category_\"+categories[i]['id']\n                div.textContent=categories[i]['name']\n                div.addEventListener('click',function (){\n                    addCurrentClass(this)\n                    showSubcategories(subcategories,productParams)\n                })\n                head.appendChild(div)\n            }\n            resizeDiv(head)\n        } else{\n            resizeDiv(head)\n        }\n    })\n}\nfunction resizeDiv(div){\n    let list = div.classList\n    let invisible = 'invisible'\n    if(list.contains(invisible)){\n        list.remove(invisible)\n    } else{\n        list.add(invisible)\n    }\n}\nfunction appendCategoryButton(name){\n    let header = document.querySelector('.header')\n    let headerButtons = header.querySelector('.headerButtons')\n    let button = document.createElement('button')\n    button.textContent=name\n    button.id='category'\n    headerButtons.appendChild(button)\n}\nfunction generateCartButtons(){\n    let buttons = document.querySelectorAll('.buttons button:first-child')\n    let cart = getCookie('cart')\n    if (!cart) {\n        createCartCookie()\n        cart = getCookie('cart')\n    }\n    cart = parseCookieValue(cart)\n    buttons.forEach(function (button){\n        let parent = button.closest('.product')\n        let value = getNumbersFromString(parent.id)[0]\n        let productsAmount = getProductsAmount(cart);\n        button.addEventListener('click',function (event){\n            event.preventDefault()\n            if (!isNaN(value)) {\n                if (!cart){\n                    productsAmount=addProductIdToCart(cart,value);\n                }  else if(!productInCart(cart,value)){\n                    productsAmount=addProductIdToCart(cart,value);\n                } else{\n                    productsAmount=removeProductIdFromCart(cart,value)\n                }\n                changeProductButton(this,cart,value)\n                updateCartButton(productsAmount)\n            }\n        })\n        updateCartButton(productsAmount)\n        changeProductButton(button,cart,value)\n    })\n}\nfunction appendAfter(nodeToInsert,parentNode,nextNode){\n    if (nextNode===null){\n        return parentNode.appendChild(nodeToInsert)\n    } else{\n        parentNode.insertBefore(nodeToInsert,nextNode)\n    }\n}\nfunction addCurrentClass(div){\n    let current = document.querySelector('.current')\n    if(current!==null){\n        current.className=current.className.replace('current','')\n    }\n    div.className+=' current'\n}\nfunction showSubcategories(subcategories,productParams){\n    let current = document.querySelector('.current')\n    let form = document.querySelector('.filterWindow form .filterInputs')\n    form.innerHTML=''\n    if (current !== null){\n        for (let i = 0;i<subcategories.length;i++){\n            if(Number(subcategories[i]['category_id'])===Number(getNumbersFromString(current.id)[0])){\n                let div = document.createElement('div')\n                let [radio,label] = makeRadioInput(subcategories[i])\n                let subcategoryDiv = document.createElement('div')\n                subcategoryDiv.className='subcategoryDiv'\n                subcategoryDiv.appendChild(label)\n                subcategoryDiv.appendChild(radio)\n                div.appendChild(subcategoryDiv)\n                div.className='filterCategory'\n                form.append(div)\n                radio.addEventListener('click',function (){\n                    let radios = document.querySelectorAll('.filterWindow form .filterInputs div input')\n                    for (let radiosKey of radios) {\n                        /*Вот здесь бы как-то сделать закрывание */\n                        if (radiosKey.checked){\n                            let childDiv = showSubcategoryParams(radiosKey,productParams)\n                            childDiv.className='productsParams'\n                            div.appendChild(childDiv)\n                        } else {\n                            let parentNode = radiosKey.parentNode\n                            let childDiv = parentNode.querySelector('div')\n                            if(childDiv !== null){\n                                childDiv.remove()\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n}\nfunction clearFilterDiv(parentNode){\n    let div = parentNode.querySelector('div')\n    if(div !== null){\n        div.innerHTML='';\n    }\n}\nfunction createDiv(parentNode){\n    return parentNode.createElement('div');\n}\nfunction createSpan(param){\n    let span = document.createElement('span')\n    span.textContent=replaceUnderscoreWithSpace(param)\n    return span\n}\nfunction showSubcategoryParams(radio,productParams){\n    let parentNode = radio.parentNode\n    let div = parentNode.querySelector('div');\n    if (div !== null) {\n        div.remove();\n    }\n    div = document.createElement('div')\n    let id = getNumbersFromString(radio.id);\n    let params = productParams[id];\n    let counter = 1;\n    for (let paramsKey in params) {\n        if(paramsKey==='name'){\n            continue;\n        }\n        let span = createSpan(paramsKey);\n        div.appendChild(span);\n        span.addEventListener('click', (function(counter) {\n            return function() {\n                let spanDiv = document.getElementById('spanDiv' + counter.toString());\n                if (spanDiv !== null) {\n                    spanDiv.remove();\n                } else {\n                    spanDiv = filterSpanInputs(params[paramsKey], paramsKey);\n                    appendAfter(spanDiv,div,this.nextSibling)\n                    // div.appendChild(spanDiv);\n                }\n                spanDiv.id = 'spanDiv' + counter.toString();\n            };\n        })(counter));\n        counter++\n    }\n    return div\n}\nfunction filterSpanInputs(params,key){\n    let div = document.createElement('div');\n    div.className = 'paramsInputs'\n    // let div = document.createElement('div');\n    let i = 1;\n    for (let param of params) {\n        let inputsDiv = document.createElement('div')\n        inputsDiv.className='inputsDiv'\n        let input = document.createElement('input')\n        input.id = key+'_'+i.toString()\n        input.name = replaceUnderscoreWithSpace(key)+'[]'\n        input.type = 'checkbox'\n        input.value = param\n        let label = document.createElement('label')\n        label.setAttribute('for',input.id)\n        label.innerText=param;\n        inputsDiv.appendChild(label)\n        inputsDiv.appendChild(input)\n        div.appendChild(inputsDiv)\n        i++\n    }\n    return div\n}\nfunction makeRadioInput(object){\n    let radio = document.createElement('input')\n    radio.type='radio';\n    radio.name='subcategory';\n    radio.value=object['id']\n    radio.id='radio_'+object['id']\n    let label = document.createElement('label')\n    label.setAttribute('for',radio.id)\n    label.textContent=object['name']\n    return [radio,label]\n}\nfunction getNumbersFromString(string){\n    return string.match(/\\d+/g)\n}\nfunction replaceUnderscoreWithSpace(str) {\n    return str.replace(/_/g, ' ');\n}\n\n// cart and buttons part\n\n\nfunction getCookie(cookieName) {\n    let cookies = document.cookie.split('; ');\n\n    // Проходим по всем кукам\n    for (let i = 0; i < cookies.length; i++) {\n        // Разделяем каждую куку по знаку равно, чтобы получить ключ и значение\n        let cookie = cookies[i].split('=');\n\n        // Если имя куки совпадает с искомым именем, возвращаем её значение\n        if (cookie[0] === cookieName) {\n            return cookie[1];\n        }\n    }\n\n    // Если кука с заданным именем не найдена, возвращаем null\n    return null;\n}\n/**\n * Пробует получить куки с значением cart и если нет то создает новую и добавляет в нее значение\n *\n * @return string\n * @param [value] object\n */\nfunction createCartCookie(value) {\n    let expirationDate = new Date();\n    if (typeof value === 'undefined' || value === null) {\n        value = {\n            products: [],\n            last_access: expirationDate.toUTCString()\n        };\n    }\n    let jsonValue = JSON.stringify(value);\n    expirationDate.setTime(expirationDate.getTime() + (60 * 1000 * 5));\n    document.cookie = 'cart=' + jsonValue + '; expires=' + expirationDate.toUTCString() + '; path=/; SameSite=Lax';\n    return jsonValue\n}\n\n/**\n * Пробует получить куки с значением cart и если нет то создает новую и добавляет в нее значение\n *\n * @return number\n * @param cart\n * @param id int\n */\nfunction addProductIdToCart(cart,id) {\n    let time = new Date().toUTCString()\n    if (!cart){\n        cart = {\n            products: [],\n            last_access: time\n        };\n    } else{\n        cart.last_access=time\n    }\n\n    cart.products.push(id);\n\n    createCartCookie(cart);\n\n    return cart.products.length\n}\n\nfunction parseCookieValue(cookieValue) {\n    return JSON.parse(cookieValue)\n}\n\nfunction generateButtonForProduct(product) {\n    let cart = getCookie('cart')\n    if (!cart) {\n        createCartCookie()\n        cart = getCookie('cart')\n    }\n    cart = parseCookieValue(cart)\n    let button = document.createElement('button')\n    let div = document.getElementById('product_' + product);\n    let img = document.createElement('img')\n    if (productInCart(cart, product)) {\n        button.className = 'addToCart'\n        img.src='images/buttons/shopping-cart.svg'\n    } else {\n        button.className = 'removeFromCart'\n        img.src='images/buttons/remove-from-cart-icon.svg'\n    }\n    div.appendChild(button)\n    button.appendChild(img)\n}\n\nfunction productInCart(cart, product_id) {\n    return cart.products.includes(product_id)\n}\n\nfunction changeProductButton(button,cart,product) {\n    let img = button.querySelector('img')\n    if (productInCart(cart,product)){\n        button.className = 'removeFromCart'\n        img.src='images/buttons/remove-from-cart-icon.svg'\n    } else{\n        img.src='images/buttons/shopping-cart.svg'\n        button.className = 'addToCart'\n    }\n}\n\nfunction removeProductIdFromCart(cart, id) {\n\n    let time = new Date().toUTCString()\n\n    cart.products = cart.products.filter(function (value) {\n        return value !== id\n    })\n\n    cart.last_access=time\n\n    createCartCookie(cart);\n\n    return cart.products.length\n}\nfunction countProductsInCart(cart){\n    return cart.products.length\n}\nfunction updateCartValue(){\n    let cart = getCookie('cart')\n    if(!cart){\n        cart = createCartCookie()\n    }\n    cart = parseCookieValue(cart)\n    let value = countProductsInCart(cart)\n    updateCartButton(value)\n}\nfunction updateCartButton(value){\n    let button = document.getElementById('cart')\n    let text = extractNonDigits(button.textContent)\n    button.textContent=text + value\n}\nfunction extractNonDigits(str) {\n    return str.replace(/\\d/g, '');\n}\nfunction getProductsAmount(cart){\n    return cart.products.length\n}\nfunction getAllParams(data) {\n    let queryString = window.location.search;\n    let params = new URLSearchParams(queryString);\n\n    for (const [key, value] of params.entries()) {\n        data.set(key, value);\n    }\n\n    return data;\n}\nfunction createAjaxProductsButton(url,name){\n    let inputs = document.querySelectorAll('input')\n    // let token = ''\n    // for (let input of inputs) {\n    //     if (input.name ===\"_token\"){\n    //         token=input.value\n    //     }\n    // }\n    let headerCookie = getCookie('XSRF-TOKEN')\n    let wrapper = document.querySelector('.dashboardWrapper')\n    let button = document.createElement('button')\n    button.textContent = name\n    button.className = 'moreProducts button'\n    button.addEventListener('click',async function (){\n        let productsDiv = document.querySelector('.products')\n        let products = document.querySelectorAll('.product')\n        let ids = []\n        for (let product of products) {\n            ids.push(getNumbersFromString(product.id)[0])\n        }\n        let data = new FormData;\n        data = getAllParams(data)\n        ids.forEach(id => {\n            data.append('products[]', id);\n        });\n        // data.set('_token',token)\n        let promise = await fetch(url,{\n            headers: {\n                'Cookie': 'XSRF-TOKEN='+headerCookie\n            },\n            method:\"post\",\n            body:data,\n        })\n        let result = await promise.text();\n        if (result){\n            let newProducts = JSON.parse(result)\n            for (let newProduct in newProducts) {\n                let tempDiv = document.createElement('div');\n\n                tempDiv.innerHTML = newProducts[newProduct];\n\n                let a = tempDiv.firstChild;\n\n                productsDiv.appendChild(a);\n            }\n            generateCartButtons()\n        }\n        else{\n            let div = document.createElement('div')\n            div.className = 'productsOver'\n            div.textContent='Предложения закончились'\n            button.remove()\n            wrapper.appendChild(div)\n        }\n    })\n    generateCartButtons()\n    wrapper.appendChild(button)\n}\n\n\n//# sourceURL=webpack:///./resources/js/scripts/dashboard.js?");

/***/ }),

/***/ "./resources/js/scripts/header.js":
/*!****************************************!*\
  !*** ./resources/js/scripts/header.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminHeaderButtonEventManager: () => (/* binding */ adminHeaderButtonEventManager),\n/* harmony export */   headerButtonEventManager: () => (/* binding */ headerButtonEventManager)\n/* harmony export */ });\nfunction headerButtonEventManager(selector) {\n    let buttons = document.querySelectorAll(selector)\n    buttons.forEach(function (button){\n        button.addEventListener('click', hrefRedirect)\n    })\n    function hrefRedirect(){\n        let link = this.querySelector('a')\n        link.click()\n    }\n    function langChangeSelect(){\n        let a = document.getElementById('language')\n        a.addEventListener('click', function(event) {\n            event.preventDefault();\n            // Дополнительные действия, которые нужно выполнить при клике на ссылку\n        });\n        let button = a.closest('button')\n        button.removeEventListener('click',hrefRedirect)\n        button.addEventListener('click',function (){\n            let languages = document.getElementById('languages')\n            let classes = languages.classList\n            if (classes.contains('hidden')){\n                classes.remove('hidden')\n            } else{\n                classes.add('hidden')\n            }\n        })\n    }\n    langChangeSelect()\n    function getCookie(cookieName) {\n        let cookies = document.cookie.split('; ');\n\n        // Проходим по всем кукам\n        for (let i = 0; i < cookies.length; i++) {\n            // Разделяем каждую куку по знаку равно, чтобы получить ключ и значение\n            let cookie = cookies[i].split('=');\n\n            // Если имя куки совпадает с искомым именем, возвращаем её значение\n            if (cookie[0] === cookieName) {\n                return cookie[1];\n            }\n        }\n\n        // Если кука с заданным именем не найдена, возвращаем null\n        return null;\n    }\n    function updateCartValue(){\n        let cart = getCookie('cart')\n        if(!cart){\n            cart = createCartCookie()\n        }\n        cart = parseCookieValue(cart)\n        let value = countProductsInCart(cart)\n        updateCartButton(value)\n    }\n    function updateCartButton(value){\n        let button = document.getElementById('cart')\n        let text = extractNonDigits(button.textContent)\n        button.textContent=text + value\n    }\n    function extractNonDigits(str) {\n        return str.replace(/\\d/g, '');\n    }\n    function parseCookieValue(cookieValue) {\n        return JSON.parse(cookieValue)\n    }\n    function countProductsInCart(cart){\n        return cart.products.length\n    }\n    function createCartCookie(value) {\n        let expirationDate = new Date();\n        if (typeof value === 'undefined' || value === null) {\n            value = {\n                products: [],\n                last_access: expirationDate.toUTCString()\n            };\n        }\n        let jsonValue = JSON.stringify(value);\n        expirationDate.setTime(expirationDate.getTime() + (60 * 1000 * 5));\n        document.cookie = 'cart=' + jsonValue + '; expires=' + expirationDate.toUTCString() + '; path=/; SameSite=Lax';\n        return jsonValue\n    }\n    updateCartValue()\n}\n;\nfunction adminHeaderButtonEventManager(selector) {\n    let buttons = document.querySelectorAll(selector)\n    buttons.forEach(function (button){\n        button.addEventListener('click', hrefRedirect)\n    })\n    function hrefRedirect(){\n        let link = this.querySelector('a')\n        link.click()\n    }\n}\n\n\n\n//# sourceURL=webpack:///./resources/js/scripts/header.js?");

/***/ }),

/***/ "./resources/js/scripts/product.js":
/*!*****************************************!*\
  !*** ./resources/js/scripts/product.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   productEventManager: () => (/* binding */ productEventManager),\n/* harmony export */   replaceUnderScore: () => (/* binding */ replaceUnderScore)\n/* harmony export */ });\n;function productEventManager (translations){\n        let cartButton = document.querySelector('.buttons button:first-child')\n        let cart = getCookie('cart')\n        let parent = cartButton.closest('.product')\n        let value = getNumbersFromString(parent.id)[0]\n        if (!cart) {\n            createCartCookie()\n            cart = getCookie('cart')\n        }\n        cart = parseCookieValue(cart)\n        let productsAmount = getProductsAmount(cart);\n        cartButton.addEventListener('click',function (){\n            if (!isNaN(value)) {\n                if (!cart){\n                    productsAmount=addProductIdToCart(cart,value);\n                }  else if(!productInCart(cart,value)){\n                    productsAmount=addProductIdToCart(cart,value);\n                } else{\n                    productsAmount=removeProductIdFromCart(cart,value)\n                }\n                changeProductButton(this,cart,value)\n                updateCartButton(productsAmount)\n            }\n        })\n        function getCookie(cookieName) {\n            let cookies = document.cookie.split('; ');\n\n            // Проходим по всем кукам\n            for (let i = 0; i < cookies.length; i++) {\n                // Разделяем каждую куку по знаку равно, чтобы получить ключ и значение\n                let cookie = cookies[i].split('=');\n\n                // Если имя куки совпадает с искомым именем, возвращаем её значение\n                if (cookie[0] === cookieName) {\n                    return cookie[1];\n                }\n            }\n\n            // Если кука с заданным именем не найдена, возвращаем null\n            return null;\n        }\n        function getNumbersFromString(string){\n            return string.match(/\\d+/g)\n        }\n        function createCartCookie(value) {\n            let expirationDate = new Date();\n            if (typeof value === 'undefined' || value === null) {\n                value = {\n                    products: [],\n                    last_access: expirationDate.toUTCString()\n                };\n            }\n            let jsonValue = JSON.stringify(value);\n            expirationDate.setTime(expirationDate.getTime() + (60 * 1000 * 5));\n            document.cookie = 'cart=' + jsonValue + '; expires=' + expirationDate.toUTCString() + '; path=/; SameSite=Lax';\n            return jsonValue\n        }\n        function addProductIdToCart(cart,id) {\n            let time = new Date().toUTCString()\n            if (!cart){\n                cart = {\n                    products: [],\n                    last_access: time\n                };\n            } else{\n                cart.last_access=time\n            }\n\n            cart.products.push(id);\n\n            createCartCookie(cart);\n\n            return cart.products.length\n        }\n\n        function parseCookieValue(cookieValue) {\n            return JSON.parse(cookieValue)\n        }\n        function productInCart(cart, product_id) {\n            return cart.products.includes(product_id)\n        }\n        changeProductButton(cartButton,cart,value)\n        function changeProductButton(button,cart,product) {\n            let img = button.querySelector('img')\n            if (productInCart(cart,product)){\n                button.className = 'removeFromCart'\n                img.src='/images/buttons/remove-from-cart-icon.svg'\n            } else{\n                img.src='/images/buttons/shopping-cart.svg'\n                button.className = 'addToCart'\n            }\n        }\n        function replaceUnderscoreWithSpace(str) {\n            return str.replace(/_/g, ' ');\n        }\n        function removeProductIdFromCart(cart, id) {\n\n            let time = new Date().toUTCString()\n\n            cart.products = cart.products.filter(function (value) {\n                return value !== id\n            })\n\n            cart.last_access=time\n\n            createCartCookie(cart);\n\n            return cart.products.length\n        }\n        function countProductsInCart(cart){\n            return cart.products.length\n        }\n        function updateCartValue(){\n            let cart = getCookie('cart')\n            if(!cart){\n                cart = createCartCookie()\n            }\n            cart = parseCookieValue(cart)\n            let value = countProductsInCart(cart)\n            updateCartButton(value)\n        }\n        function updateCartButton(value){\n            let button = document.getElementById('cart')\n            button.textContent=translations.cart+ ':' + value\n        }\n        function getProductsAmount(cart){\n            return cart.products.length\n        }\n        function activeSectionEvents(){\n            let div = document.querySelector('.productActive')\n            let charButton = document.getElementById('characteristics')\n            let revButton = document.getElementById('reviews')\n            charButton.addEventListener('click',async function(){\n                this.classList.add('active')\n                revButton.classList.remove('active')\n                let section = document.querySelector('.productActive');\n                section.innerHTML=''\n                let href = this.getAttribute('data-href')\n                let data = await sendAjaxToRetrieveDiv(href)\n                div.appendChild(data)\n            })\n            revButton.addEventListener('click',async function(){\n                this.classList.add('active')\n                charButton.classList.remove('active')\n                let section = document.querySelector('.productActive');\n                section.innerHTML=''\n                let href = this.getAttribute('data-href')\n                let data = await sendAjaxToRetrieveDiv(href)\n                div.appendChild(data)\n            })\n            async function sendAjaxToRetrieveDiv(href){\n                let promise = await fetch(href)\n                let response = await promise.text()\n                if (response){\n                    // let data = JSON.parse(response)\n                    let tempDiv = document.createElement('div');\n                    tempDiv.innerHTML = response\n                    return tempDiv.firstChild\n                }\n            }\n            revButton.click()\n        }\n        activeSectionEvents()\n}\nfunction replaceUnderScore(){\n       let ps = document.querySelectorAll('.properties p')\n       for (let p of ps) {\n           let text = p.textContent;\n           p.textContent=replaceUnderscoreWithSpace(text)\n       }\n       function replaceUnderscoreWithSpace(str) {\n           return str.replace(/_/g, ' ');\n       }\n}\n\n\n//# sourceURL=webpack:///./resources/js/scripts/product.js?");

/***/ }),

/***/ "./resources/js/scripts/productEdit.js":
/*!*********************************************!*\
  !*** ./resources/js/scripts/productEdit.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   productEditEventManager: () => (/* binding */ productEditEventManager)\n/* harmony export */ });\nfunction productEditEventManager(translations){\n       let additionalInfoDiv = document.querySelector('.additionalInfo')\n       let moreButton = document.getElementById('more')\n       let deleteButtons = document.querySelectorAll('form .property .button button')\n       let properties = document.querySelectorAll('.property')\n       properties.forEach(function (property){\n           let input = property.querySelector('input')\n           input.value=replaceUnderscoreWithSpace(input.value)\n           let textarea = property.querySelector('textarea')\n           textarea.textContent=replaceUnderscoreWithSpace(textarea.textContent)\n           input.addEventListener('input',function (){\n               changeElementName(this.value,textarea)\n           })\n       })\n       deleteButtons.forEach(function (button){\n           button.addEventListener('click',function (){\n               deleteProperty(this)\n           })\n       })\n       moreButton.addEventListener('click',function (){\n           appendNewInputs()\n       })\n       function replaceUnderscoreWithSpace(str) {\n           return str.replace(/_/g, ' ');\n       }\n       function appendNewInputs(){\n           let properties = document.querySelectorAll('.property')\n           let num = properties.length\n           let div = document.createElement('div')\n           div.className = 'property'\n           let nameInput = document.createElement('input')\n           nameInput.id = ('data_'+num+1).toString()\n           let nameInputLabel = document.createElement('label')\n           nameInput.setAttribute('placeholder',translations.propertyName)\n           nameInputLabel.textContent = translations.propertyName\n           nameInputLabel.setAttribute('for',nameInput.id)\n           let dataTextarea = document.createElement('textarea')\n           let dataInputLabel = document.createElement('label')\n           dataInputLabel.textContent=translations.propertyDescription\n           dataTextarea.setAttribute('placeholder',translations.propertyDescription)\n           dataTextarea.id = (num+1).toString()\n           dataInputLabel.setAttribute('for',dataTextarea.id)\n           nameInput.addEventListener('input',function (){\n               let name = this.value\n               changeElementName(name,dataTextarea)\n           })\n           let emptyDiv = document.createElement('div')\n           div.appendChild(nameInputLabel)\n           div.appendChild(nameInput)\n           div.appendChild(dataInputLabel)\n           div.appendChild(dataTextarea)\n           div.appendChild(emptyDiv)\n           let deleteButton = createDeleteButtonDiv()\n           div.appendChild(deleteButton)\n           additionalInfoDiv.appendChild(div)\n       }\n       function createDeleteButtonDiv(){\n           let div = document.createElement('div')\n           div.className = 'button'\n           let deleteButton = document.createElement('button')\n           deleteButton.setAttribute('type','button');\n           deleteButton.textContent=translations.deleteProperty\n           deleteButton.addEventListener(\"click\",function (){\n               deleteProperty(this)\n           })\n           div.appendChild(deleteButton)\n           return div\n       }\n       function deleteProperty(button){\n           let property = button.closest('.property')\n           property.remove()\n       }\n       function changeElementName(name,input){\n           input.setAttribute('name',name)\n       }\n}\n\n\n\n//# sourceURL=webpack:///./resources/js/scripts/productEdit.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/app.js");
/******/ 	
/******/ })()
;